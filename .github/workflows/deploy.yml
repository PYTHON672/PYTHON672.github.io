# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要

      # 设置 Bun 环境
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # 设置 Node.js 环境（确保与VitePress兼容的版本）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 安装依赖并构建
      - name: Install dependencies and build
        run: |
          bun install
          npx vitepress build docs

      # 上传构建产物作为artifact
      - name: Upload artifact
        if: success() # 仅在构建成功时上传
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    concurrency: 
      group: deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/.vitepress/dist
          # 如果你的仓库是用户或组织页面（例如用户名.github.io），需要设置以下选项
          # cname: example.com # 替换为你的自定义域名，如果有的话